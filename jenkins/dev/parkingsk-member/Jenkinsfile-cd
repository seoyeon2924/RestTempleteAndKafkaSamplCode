@Library('retort-lib') _
def label = "jenkins-${UUID.randomUUID().toString()}"

// Kubernetes의 Service Account명
def ZCP_USERID='parkingsk00'
def K8S_NAMESPACE='parkingsk'
def DEPLOY_PATH='configuration/overlay/dev/parkingsk-member'
def DEPLOYMENT='parkingsk-member-app-v1-dev'

timestamps {
    podTemplate(label:label,
        serviceAccount: "zcp-system-sa-${ZCP_USERID}",
        containers: [
            containerTemplate(name: 'maven', image: 'maven:3.5.2-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
            containerTemplate(name: 'docker', image: 'docker:17-dind', ttyEnabled: true, command: 'dockerd-entrypoint.sh', privileged: true),
            containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.18.2', ttyEnabled: true, command: 'cat'),
            containerTemplate(name: 'tools', image: 'argoproj/argo-cd-ci-builder:v1.0.0', command: 'cat', ttyEnabled: true),
            containerTemplate(name: 'kustomize', image: 'gauravgaglani/k8s-kustomize:1.1.0', ttyEnabled: true, command: 'cat')
        ],
        volumes: [
            persistentVolumeClaim(mountPath: '/root/.m2', claimName: 'zcp-jenkins-mvn-repo')
        ]) {
    
        node(label) {
            stage('SOURCE CHECKOUT') {
                def repo = checkout scm
            }
            
            stage('CHECKOUT') {
                container('tools') {
                    sh 'git checkout origin/master'
                }
            }
    
    
            stage('BUILD K8S YAML') {
                container('kustomize') {
                    sh "kustomize build --load_restrictor none --enable_kyaml=false ${DEPLOY_PATH} > deploy.yaml"
                    echo 'Kubernetes 배포 yaml 생성 내역'
                    sh 'cat deploy.yaml'
                }
            }
    
            stage('DEPLOY') {
                container('kubectl') {
                    kubeCmd.apply file: 'deploy.yaml', wait: 300, recoverOnFail: false, namespace: K8S_NAMESPACE
                    sh "kubectl rollout restart deployment ${DEPLOYMENT} -n ${K8S_NAMESPACE} "
                }
            }
        }
    }
}
